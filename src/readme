
## ðŸ“œ Files
- `main.go` â€“ Entry point of the scheduler
- `sfs.go` â€“ Original Smart OS Scheduler (SFS)
- `tla.go` â€“ Tail Latency Alleviate Scheduler (TLAS)
- `stcf_simulator.go` â€“ Shortest Time-to-Completion First (STCF) simulator
- `process.go` â€“ Request/Process data structures
- `execute.go` â€“ Core scheduling execution logic
- `schedtool.go` â€“ Interface with Linux `schedtool`
- `readTrace.go` â€“ Workload trace parser
- `go.mod`, `go.sum` â€“ Go module dependencies

## ðŸš€ Usage
Compile and run TLAS with:
```bash
go run main.go -p tla -t test2 -n 12 > ../evaluation/results/tla.txt

ðŸ”§ Notes

    Scheduler terminates automatically when all requests finish

    Request counter increments only on completion

    SLOs are estimated dynamically and logged when updated
